@page
@model AutoArsenal_App.Pages.Products.ProductsModel
@{
    ViewData["Title"] = "Products";
}

<!-- Address Bar -->
<div class="pagetitle">
    <h1>@ViewData["Title"]</h1>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item active" aria-current="page">
                <a asp-page="../Index">Home</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </nav>
</div>

<!-- Error message -->
@if (TempData["ErrorOnServer"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        Error: @TempData["ErrorOnServer"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<!-- End Error message -->
<!-- Search Bar -->
<div class="card">
    <div class="card-body">
        <div id="panelSearch" class="d-flex justify-content-between align-items-center">
            <div class="searchBarButton" style="margin:10px;">
                <a class="btn btn-primary" href="~/Products/AddProduct">Add New Product</a>
            </div>
            <form class="form-inline flex-grow-1 mr-2" id="searchBar">
                <input class="form-control w-100" type="search" placeholder="Search" aria-label="Search" />
            </form>
        </div>
    </div>
</div>


<!-- Products Front Page Design -->
<div class="card">
    <div class="card-body">
        <h5 class="card-title">Products</h5>

        <div class="table-responsive">
            <table id="productsTable" class="table table-hover table-striped table-bordered text-center">
                <thead class="table-dark">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Product</th>
                        <th scope="col">Category</th>
                        <th scope="col">Description</th>
                        <th scope="col">Sale Price</th>
                        <th scope="col">Status</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody class="table-group-divider">
                    @if (Model.Products != null && Model.ProductCategories != null)
                    {
                        int count = 1;
                        @foreach (var item in Model.ProductCategories)
                        {
                            if (!item.IsDeleted)
                            {
                                Models.Product prod = Model.Products.Find(p => p.ID == item.ProductId);
                                string category = Model.Lookups.Find(l => l.ID == item.Category).Value;
                                string manu = Model.Manufacturers.Find(m => m.ID == item.ManufacturerId).Name;
                                <tr>
                                    <td>@(count++)</td>
                                    <td>@prod.ProductName</td>
                                    <td>@category</td>
                                    <td>@prod.ProductDescription</td>
                                    <td>@item.SalePrice.ToString()</td>
                                    <td>In-Stock</td> <!-- This part need to be modified -->
                                    <td>
                                        <a class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#ViewProductModal" onclick="ViewProduct('@item.Image','@prod.ProductName','@category', '@manu', '@item.SalePrice','@prod.ProductDescription')"> <i class="bi bi-eye"></i> </a>
                                        <a class="btn btn-sm btn-success" data-bs-toggle="modal" data-bs-target="#UpdateProductModal" onclick="updateProduct('@prod.ID', '@item.ID','@prod.ProductName','@prod.ProductDescription','@item.ManufacturerId','@item.Category','@item.SalePrice')"><i class="bi bi-pencil"></i> </a>
                                        <a class="btn btn-sm btn-danger" data-bs-toggle="modal" data-bs-target="#DeleteProductModal" onclick="deleteProduct('@item.ID','@prod.ProductName')"> <i class="bi bi-trash"></i> </a>
                                    </td>
                                </tr>
                            }
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5">No records found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modals-->
<!-- Update Product Modal -->
<div class="modal fade" id="UpdateProductModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="UpdateProduct" onsubmit="return validateUpdateProductForm()">
                <!-- Header -->
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel"><i class="bi bi-pencil"></i> Update Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <!-- Body -->
                <div class="modal-body">
                    <input type="hidden" id="updateProductId" asp-for="Product.ID" />
                    <input type="hidden" id="updateProductCategoryId" asp-for="ProductCategory.ID" />
                    <input type="hidden" id="editProductName1" asp-for="Product.ProductName" />
                    <input type="hidden" id="editCategory1" asp-for="ProductCategory.Category" />

                    <div class="mb-3">
                        <!-- Product Name -->
                        <div class="form-floating mt-2">
                            <input type="text"
                                   class="form-control"
                                   id="editProductName"
                                   placeholder="Product Name"
                                   disabled />
                            <label for="editProductName">Product Name</label>
                            <p class="invalid" id="editProductNameError"></p>
                        </div>
                    </div>
                    <div class="mb-3">
                        <!-- Description -->
                        <div class="form-floating mt-2">
                            <textarea class="form-control"
                                      id="editProductDescription"
                                      rows="3"
                                      placeholder="Enter Product Description here..."
                                      asp-for="Product.ProductDescription">
                                  </textarea>
                            <label for="editProductDescription">Product Description</label>
                            <p class="invalid" id="editProductDescriptionError"></p>

                        </div>
                    </div>
                    <div class="mb-3">
                        <!-- Category -->
                        <div class="form-floating mt-2">
                            <div class="form-floating mt-2">
                                <select class="form-select"
                                        id="editCategory"
                                        disabled>
                                    <option value="-1" selected>Select category</option>
                                    @if (Model.Lookups != null)
                                    {
                                        foreach (var lookup in Model.Lookups)
                                        {
                                            if (lookup.Category == "Product_Category")
                                            {
                                                <option value="@lookup.ID">@lookup.Value</option>
                                            }
                                        }
                                    }
                                </select>
                                <label for="editCategory">Category</label>
                                <p class="invalid" id="categoryError"></p>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <!-- Manufacturer -->
                        <div class="form-floating mt-2">
                            <select class="form-select"
                                    id="editManufacturerID"
                                    asp-for="ProductCategory.ManufacturerId">
                                <option value="-1" selected>Select Manufacturer</option>
                                @foreach (var manufact in Model.Manufacturers)
                                {
                                    <option value="@manufact.ID">@manufact.Name</option>
                                }
                            </select>
                            <label for="editManufacturerID">Manufacturer</label>
                            <p class="invalid" id="editManufacturerIdError"></p>
                        </div>
                    </div>
                    <div class="mb-3">
                        <!-- Sale Price -->
                        <div class="form-floating mt-2">
                            <input type="number"
                                   class="form-control"
                                   id="editSalePrice"
                                   placeholder="Sale Price"
                                   value="0.00"
                                   min="1.00"
                                   oninput="validity.valid||(value='');"
                                   asp-for="ProductCategory.SalePrice" />
                            <label for="editSalePrice">Sale Price</label>
                            <p class="invalid" id="editSalePriceError"></p>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-floating mt-2">
                            <!-- Image -->
                            <input type="file"
                                   class="form-control"
                                   id="img"
                                   placeholder="Select Image"
                                   accept="image/*"
                                   asp-for="ProductCategory.Image" />
                            <label for="img">Image</label>
                            <p class="invalid" id="imageError"></p>
                        </div>
                    </div>
                </div>
                <!-- Footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- View Product Modal -->
<div class="modal fade" id="ViewProductModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel"><i class="bi bi-eye"></i> View Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <!-- Body -->
            <div class="modal-body">
                <div class="row g-0">
                    <!-- Product Image without Border -->
                    <div class="col-md-4 d-flex align-items-center justify-content-center">
                        <img src="~/images/titleIcon.png" id="vImage" class="rounded mx-auto d-block" alt="Product">
                    </div>
                    <div class="col-md-1">
                        <div class="d-flex justify-content-around" style="height: 200px;">
                            <div class="vr" style="color:black"></div>
                        </div>
                    </div>
                    <!-- Product Name and Description -->
                    <div class="col-md-5">
                        <!-- Other Items -->
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item"><div style="font-size:28px;"><b id="vProductName"></b></div></li>
                            <li class="list-group-item"><p>Description: <b id="vDescription"></b></p></li>
                            <li class="list-group-item"><p>Category: <b id="vProductCategory"></b></p></li>
                            <li class="list-group-item"><p>Manufacturer: <b id="vManufacturer"></b></p></li>
                            <li class="list-group-item"><p>Sale Price: <b id="vSalePrice"></b></p></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Delete Confirmation Modal -->
<div class="modal fade" id="DeleteProductModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form method="post" asp-page-handler="DeleteProduct">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel"><i class="bi bi-trash"></i> Delete Products</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="deleteId" asp-for="DeleteID" />
                    <p>Are you sure you want to delete this product?</p>
                    <p>Product Name: <b id="deleteTitle"></b></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- JavaScript Section -->
@section Scripts {
    <script>
        // Validation for Update Product form
        function validateUpdateProductForm() {
            var editProductName = document.getElementById("editProductName");
            var editProductDescription = document.getElementById("editProductDescription");
            var editSalePrice = document.getElementById("editSalePrice");
            var editManufacturerID = document.getElementById("editManufacturerID");

            var isValid = true;

            // Check if Description is empty
            if (editProductDescription.value.trim() === "") {
                isValid = false;
                console.log(isValid)
                document.getElementById("editProductDescriptionError").textContent = "Description is required.";
            } else {
                document.getElementById("editProductDescriptionError").textContent = "";
            }

            // Check if Sale Price is empty
            if (editSalePrice.value.trim() === "") {
                isValid = false;
                document.getElementById("editSalePriceError").textContent = "Sale Price is required.";
            } else {
                document.getElementById("editSalePriceError").textContent = "";
            }

            // Check if Manufacturer is selected
            if (editManufacturerID.value.trim() === "-1") {
                isValid = false;
                document.getElementById("editManufacturerIdError").textContent = "Manufacturer is required.";
            } else {
                document.getElementById("editManufacturerIdError").textContent = "";
            }

            return isValid;
        }
    </script>

    <script>
        // Editing
        function updateProduct(productId, productCategoryId, productName, productDescription, manufacturer, category, salePrice) {
            console.log(productId, productCategoryId, productName, productDescription, manufacturer, category, salePrice);
            document.getElementById("updateProductId").value = productId;
            document.getElementById("updateProductCategoryId").value = productCategoryId;
            var editProductName = document.getElementById("editProductName");
            var editProductName1 = document.getElementById("editProductName1");
            var editProductDescription = document.getElementById("editProductDescription");
            var editCategory = document.getElementById("editCategory");
            var editCategory1 = document.getElementById("editCategory1");
            var editManufacturerID = document.getElementById("editManufacturerID");
            var editSalePrice = document.getElementById("editSalePrice");
            var img = document.getElementById("img");

            editProductName.value = productName;
            editProductName1.value = productName;
            editProductDescription.value = productDescription;
            editCategory.value = category;
            editCategory1.value = category;
            editManufacturerID.value = manufacturer;
            editSalePrice.value = salePrice;
        }

        // Deletion
        function deleteProduct(id, productName) {
            document.getElementById("deleteId").value = id;
            document.getElementById("deleteTitle").textContent = productName;
        }
        // View Product
        function ViewProduct(img, name, category, manufacturer, sale, descr) {
            // document.getElementById("vImage").src = img;
            document.getElementById("vProductName").textContent = name;
            document.getElementById("vProductCategory").textContent = category;
            document.getElementById("vManufacturer").textContent = manufacturer;
            document.getElementById("vSalePrice").textContent = sale;
            document.getElementById("vDescription").textContent = descr;
        }
    </script>

    <!-- Table Settings -->
    <script>
        $(document).ready(function () {
            var table = $("#productsTable").DataTable({
                paging: true,
                lengthChange: false,
                searching: true,
                ordering: false,
                info: true,
                autoWidth: false,
                language: {
                    emptyTable: "No data available",
                    info: "Showing _START_ to _END_ of _TOTAL_ entries",
                    infoEmpty: "Showing 0 to 0 of 0 entries",
                    infoFiltered: "(filtered from _MAX_ total entries)",
                    zeroRecords: "No matching records found",
                    search: "Search:"
                }
            });

            // Add event listener for your custom search bar
            $('#searchBar input').on('input', function () {
                var searchText = this.value.trim();
                table.search(searchText).draw();
            });
        });
    </script>
}
