@page
@model AutoArsenal_App.Pages.Products.AddProductModel
@{
    ViewData["Title"] = "Add Product";
}

<!-- Address Bar -->
<div class="pagetitle">
    <h1>@ViewData["Title"]</h1>
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item active" aria-current="page">
                <a asp-page="../Index">Home /</a>
                <a asp-page="~/Pages/Products/AllProducts"> Products</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </nav>
</div>

<!-- Error message -->
@if (TempData["ErrorOnServer"] != null)
{
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            Error: @TempData["ErrorOnServer"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
}
<!-- End Error message -->

<!-- Add Product Form -->
<form class="row g-3" id="AddProduct">

    <!-- Product Name -->
    <div class="col-md-6">
        <div class="form-floating mt-2">
            <input type="text" class="form-control" id="productName" placeholder="Product Name">
            <label for="productName">Product Name</label>
            <p class="invalid" id="productNameError"></p>
        </div>
    </div>
    <!-- Manufacturers -->
    <div class="col-md-6">
        <div class="form-floating mt-2">
            <select class="form-select" id="manufacturerID">
                <option value="-1" selected>Select Manufacturer</option>
                @foreach (var manufact in Model.Manufacturers)
                {
                        <option value="@manufact.Name">@manufact.Name</option>
                }
            </select>
            <label for="manufacturerID">Manufacturer</label>
            <p class="invalid" id="manufacturerIdError"></p>
        </div>
    </div>
    <!-- Description -->
    <div class="col-md-12">
        <div class="form-floating mt-2">
            <textarea class="form-control" id="description" rows="3" placeholder="Enter Product Description here..."></textarea>
            <label for="description">Product Description</label>
        </div>
    </div>
    <!-- Cost Price -->
    <div class="col-md-6">
        <div class="form-floating mt-2">
            <input type="text" class="form-control" id="costPrice" placeholder="Cost Price">
            <label for="costPrice">Cost Price</label>
            <p class="invalid" id="costPriceError"></p>
        </div>
    </div>
    <!-- Sale Price -->
    <div class="col-md-6">
        <div class="form-floating mt-2">
            <input type="text" class="form-control" id="salePrice" placeholder="Sale Price">
            <label for="salePrice">Sale Price</label>
            <p class="invalid" id="salePriceError"></p>
        </div>
    </div>
    <!-- Category -->
    <div class="col-md-6">
        <div class="form-floating mt-2">
            <select id="category" class="form-select">
                <option value="-1" selected>Select category</option>
                @foreach (var lookup in Model.Lookups)
                {
                    if (lookup.Category == "Product_Category")
                    {
                                <option value="@lookup.Value">@lookup.Value</option>
                    }
                }
            </select>
            <label for="category">Category</label>
            <p class="invalid" id="categoryError"></p>
        </div>
    </div>
    <!-- Stock -->
    <div class="col-md-6">
        <div class="form-floating mt-2">
            <input type="text" class="form-control" id="stock" placeholder="Stock">
            <label for="stock">Stock</label>
            <p class="invalid" id="stockError"></p>
        </div>
    </div>
    <!-- Image -->
    <div class="col-md-6">
        <div class="form-floating mt-2">
            <input class="form-control" type="text" id="img" placeholder="Image">
            <label for="img"> Image </label>
        </div>
    </div>

    <div class="col-md-6">
        <button type="button" class="btn btn-primary" onclick="PopulateData()">Add</button>
    </div>
</form>

<!-- Showing the added products Table -->
<div class="card mt-4">
    <div class="card-body d-flex justify-content-between align-items-center">
        <h5 class="card-title">Products</h5>
        <button type="button" class="btn btn-primary" onclick="sendDataToServer()">Save</button>
    </div>
    <!-- Table with stripped rows -->
    <table id="addProductsTable" class="table table-striped datatable">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Product</th>
                <th scope="col">Category</th>
                <th scope="col">Manufacturer</th>
                <th scope="col">Cost Price</th>
                <th scope="col">Sale Price</th>
                <th scope="col">Stock</th>
                <th scope="col">Description</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
    <!-- End Table with stripped rows -->
</div>

<!-- View Product Modal -->
<div class="modal fade" id="ViewProductModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form>
                <!-- Header -->
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel"><i class="bi bi-eye"></i> View Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <!-- Body -->
                <div class="modal-body">
                    <div class="card mb-3">
                        <div class="row g-0">
                            <!-- Product Image -->
                            <div class="col-md-4">
                                <img id="vImage" class="img-fluid rounded-start" alt="Product">
                            </div>
                            <!-- Product Name and Description -->
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title"><b id="vProductName"></b></h5>
                                    <p class="card-text" id="vDescription"></p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
        <script>
            function ViewProduct(img, name, descr) {
                document.getElementById("vImage").src = img;
                document.getElementById("vProductName").textContent = name;
                document.getElementById("vDescription").textContent = descr;
            }
        </script>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var form = document.querySelector("#AddProduct");
                form.addEventListener("input", function () {
                    CheckingInput();
                });
            });

            function CheckingInput() {
                var form = document.querySelector("#AddProduct");
                var productName = form.querySelector("#productName");
                var manufacturerID = form.querySelector("#manufacturerID");
                var costPrice = form.querySelector("#costPrice");
                var salePrice = form.querySelector("#salePrice");
                var category = form.querySelector("#category");
                var stock = form.querySelector("#stock");

                var errors = false;

                if (productName.value.trim() === "") {
                    showError(productName, "#productNameError", "Product Name is required");
                    errors = true;
                } else {
                    hideError(productName, "#productNameError");
                }

                if (manufacturerID.value == -1) {
                    showError(manufacturerID, "#manufacturerIdError", "Manufacturer ID is required");
                    errors = true;
                } else {
                    hideError(manufacturerID, "#manufacturerIdError");
                }

                if (costPrice.value.trim() === "") {
                    showError(costPrice, "#costPriceError", "Cost Price is required");
                    errors = true;
                } else {
                    hideError(costPrice, "#costPriceError");
                }

                if (salePrice.value.trim() === "") {
                    showError(salePrice, "#salePriceError", "Sale Price is required");
                    errors = true;
                } else {
                    hideError(salePrice, "#salePriceError");
                }

                if (category.value == -1) {
                    showError(category, "#categoryError", "Category is required");
                    errors = true;
                } else {
                    hideError(category, "#categoryError");
                }

                if (stock.value.trim() === "") {
                    showError(stock, "#stockError", "Stock is required");
                    errors = true;
                } else {
                    hideError(stock, "#stockError");
                }

                return errors;
            }

            function showError(inputField, errorFieldSelector, errorMessage) {
                var errorField = document.querySelector(errorFieldSelector);
                errorField.textContent = errorMessage;
                errorField.style.display = 'block';
                inputField.classList.add("is-invalid");
            }

            function hideError(inputField, errorFieldSelector) {
                var errorField = document.querySelector(errorFieldSelector);
                errorField.textContent = "";
                errorField.style.display = 'none';
                inputField.classList.remove("is-invalid");
            }

            function PopulateData() {
                var productName = document.querySelector("#productName").value;
                var manufacturerID = document.querySelector("#manufacturerID").value;
                var costPrice = document.querySelector("#costPrice").value;
                var salePrice = document.querySelector("#salePrice").value;
                var category = document.querySelector("#category").value;
                var stock = document.querySelector("#stock").value;
                var ImagePath = document.querySelector("#img").value;
                var description = document.querySelector("#description").value;

                var table = document.getElementById("addProductsTable");
                var newRow = "<tr><td>" + (table.rows.length + 1) + "</td><td>" + productName + "</td><td>" + category + "</td><td>" + manufacturerID + "</td><td>" + costPrice + "</td><td>" + salePrice + "</td><td>" + stock + "</td><td>" + description + "</td><td><a class='btn btn-sm btn-primary' data-bs-toggle='modal' data-bs-target='#ViewProductModal' onclick='ViewProduct(\"" + ImagePath + "\", \"" + productName + "\", \"" + description + "\")'> <i class='bi bi-eye'></i> </a><a class='btn btn-sm btn-danger' data-bs-toggle='modal' data-bs-target='#DeleteProductModal' onclick='deleteRow(this)'> <i class='bi bi-trash'></i> </a></td></tr>";

                var tableBody = document.querySelector("#addProductsTable tbody");
                tableBody.innerHTML += newRow;

                document.querySelector("#AddProduct").reset();
            }


            function deleteRow(btn) {
                var row = btn.parentNode.parentNode;
                row.parentNode.removeChild(row);
            }
        </script>

        <script>
            function sendDataToServer() {
                var table = document.getElementById("addProductsTable"); 
                var data = [];
                for (var i = 1; i < table.rows.length; i++) {
                    var row = table.rows[i];
                    var rowData = {
                        "Product": row.cells[1].innerText,
                        "Category": row.cells[2].innerText,
                        "Manufacturer": row.cells[3].innerText,
                        "CostPrice": row.cells[4].innerText,
                        "SalePrice": row.cells[5].innerText,
                        "Stock": row.cells[6].innerText,
                        "Description": row.cells[7].innerText
                    };
                    data.push(rowData);
                }
                var jsonData = JSON.stringify(data);
                $.ajax({
                    type: "POST",
                    url: "asp-page-handler=OnPostAddProductInDB",
                    contentType: "application/json",
                    data: jsonData,
                    success: function (response) {
                        console.log("Data sent successfully");
                    },
                    error: function (xhr, status, error) {
                        console.error("Failed to send data:", error);
                    }
                });
            }
        </script>
}
